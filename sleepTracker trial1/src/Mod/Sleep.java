package Mod;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.util.ArrayList;

//Will take user to a begin sleep screen where they can click a button to allow the program to access their microphone
//and track their sleep.
public class Sleep extends javax.swing.JFrame {

	private static ArrayList<Integer> Sounds = new ArrayList();
	
	private static ArrayList <Integer> timesTaken = new ArrayList();
	
	private static ArrayList <Integer> timesTakenMin = new ArrayList();
	
	private static ArrayList <Integer> times = new ArrayList();
	
	private static ArrayList <Integer> timesMin = new ArrayList();
	
	//Adds the amount of times that sound was made to the sounds arraylist to be stored.
	public void addIntegers(int n) {
		Sounds.add(n);
	}
	
	//Adds the hours at which noise was detected to the times taken arraylist to be stored.
	public void addTimes(int n) {
		timesTaken.add(n);
	}
	
	//Adds the minutes at which noise was detected to the times taken arraylist to be stored.
	public void addTimesMin(int n) {
		timesTakenMin.add(n);
	}
	
	private int timesClick = 0;
	
	private int numBigSounds = 0;
	
	private User myUser;
	//unused method
	public Sleep(int i) {
		
	}
	
	//allows for the transfer of user data to this screen.
	public void setUser(User I) {
		myUser = I;
	}
	
	//Displays a sleep screen with all the appropriate buttons, text boxes, and images
    public Sleep() {
        initComponents();
        Dimension size = Toolkit. getDefaultToolkit(). getScreenSize();
        int scrnH = size.height;
        int scrnW = size.width;
        Dimension o =getSize();
        int Hdia = o.height/2;
        int Wdia = o.width/2;

        setLocation(scrnW/2-Wdia,scrnH/2-Hdia);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code"> 
    
  //Creates a sleep screen with all the appropriate buttons, text boxes, and images
    private void initComponents() {

    	jLayeredPane1 = new javax.swing.JLayeredPane();
        jLabel2 = new javax.swing.JLabel();
        jToggleButton1 = new javax.swing.JToggleButton();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Dark.png")));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Click Start/Stop when you go to sleep, and once again when you wake up");

        jToggleButton1.setFont(new java.awt.Font("Copperplate Gothic Bold", 0, 14)); // NOI18N
        jToggleButton1.setText("START/STOP");
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });

        jButton1.setText("BACK");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLayeredPane1.setLayer(jLabel2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jToggleButton1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jButton1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jLabel3, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addGap(318, 318, 318)
                .addComponent(jToggleButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(337, Short.MAX_VALUE))
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 601, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(86, 86, 86))
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 805, Short.MAX_VALUE))
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane1Layout.createSequentialGroup()
                .addContainerGap(196, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(184, 184, 184)
                .addComponent(jToggleButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(109, 109, 109)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 622, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        

    @SuppressWarnings("deprecation")
    
    //checks if the start/stop button was clicked, if it was clicked for the first time, the mic begins recording
    //and stores whenever noise was detected. If it was clicked for a second time, the recording will stop and information
    //is stored.
	private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {    
    	int highLimiter = 0;
    	timesClick ++;
    	testMic thread1 = new testMic();
		thread1.setDaemon(true);
		setAlwaysOnTop(true);


    	if(timesClick == 1) {
    		thread1.setDaemon(true);
    		thread1.start();

    		try {
				thread1.join(1000);
			} catch (InterruptedException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
    	}
    	else if(timesClick == 2) {
    		thread1.setBB(true);
    		for(int i =0; i<Sounds.size(); i++) {
    			if(Sounds.get(i)> highLimiter) {
    				highLimiter = Sounds.get(i);
    			}
    		}
    		System.out.println(Sounds.size());
    		System.out.println(times.size());
    		for(int i =0; i<Sounds.size(); i++) {
    			if(Sounds.get(i) <= highLimiter-200) {
    				numBigSounds++;
    				times.add(timesTaken.get(i));
    				timesMin.add(timesTakenMin.get(i));
    			}
    		}
    		
    		System.out.println("This is time h rn" + timesTaken.get(0));
    	}
    	
    	
		


    }                                              

    //Checks if back button was pressed, if so, information from sleep is transfered over and user is returned to main menu.
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         
    	MainMenu o = new MainMenu();
    	o.setTimesWoke(numBigSounds);
    	o.setUser(myUser);
    	o.setTimes(times);
    	o.setTimesMin(timesMin);
    	 setVisible(false);
    	 o.setVisible(true);
 		o.isVisible();
    }                                        

    /**
     * @param args the command line arguments
     */
    
  //Creates a sleep screen with all the appropriate buttons, text boxes, and images
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Sleep.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Sleep.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Sleep.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Sleep.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Sleep().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JToggleButton jToggleButton1;
    // End of variables declaration                   
}
